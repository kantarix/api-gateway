openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:5003
  description: Generated server url
paths:
  /api/devices/{deviceId}:
    get:
      tags:
      - Device
      operationId: getDevice
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Device'
    put:
      tags:
      - Device
      operationId: editDevice
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditDeviceRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Device'
    delete:
      tags:
      - Device
      operationId: deleteDevice
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
  /api/devices:
    get:
      tags:
      - Device
      operationId: getDevices
      parameters:
      - name: ownerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceSimple'
    post:
      tags:
      - Device
      operationId: createDevice
      parameters:
      - name: ownerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDeviceRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Device'
  /api/devices/{deviceId}/control:
    post:
      tags:
      - Device
      operationId: editDeviceCapabilities
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceCapabilitiesRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Capability'
  /api/devices/ownership/{deviceId}:
    get:
      tags:
      - Device
      operationId: checkOwnership
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: ownerId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
components:
  schemas:
    EditDeviceRequest:
      required:
      - homeId
      - name
      type: object
      properties:
        name:
          type: string
        homeId:
          type: integer
          format: int32
        roomId:
          type: integer
          format: int32
    Capability:
      required:
      - code
      - value
      type: object
      properties:
        code:
          $ref: '#/components/schemas/Code'
        value:
          type: object
    Device:
      required:
      - capabilities
      - category
      - homeId
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        homeId:
          type: integer
          format: int32
        roomId:
          type: integer
          format: int32
        name:
          type: string
        category:
          type: string
        capabilities:
          type: array
          items:
            $ref: '#/components/schemas/Capability'
    CreateDeviceRequest:
      required:
      - homeId
      - tuyaDeviceId
      type: object
      properties:
        tuyaDeviceId:
          type: string
        name:
          type: string
        homeId:
          type: integer
          format: int32
        roomId:
          type: integer
          format: int32
    AbstractCapability:
      required:
      - code
      - value
      type: object
      properties:
        code:
          $ref: '#/components/schemas/Code'
      discriminator:
        propertyName: code
        mapping:
          SWITCH_LED: '#/components/schemas/SwitchLedCapability'
          TEMPERATURE: '#/components/schemas/TemperatureCapability'
          COLOR: '#/components/schemas/ColorCapability'
          BRIGHTNESS: '#/components/schemas/BrightnessCapability'
          WORK_MODE: '#/components/schemas/WorkModeCapability'
    BrightnessCapability:
      required:
      - value
      type: object
      allOf:
      - $ref: '#/components/schemas/AbstractCapability'
      - type: object
        properties:
          value:
            type: integer
            format: int32
    ColorCapability:
      required:
      - value
      type: object
      allOf:
      - $ref: '#/components/schemas/AbstractCapability'
      - type: object
        properties:
          value:
            $ref: '#/components/schemas/ColorHSV'
    ColorHSV:
      type: object
      properties:
        hue:
          type: integer
          format: int32
        saturation:
          type: integer
          format: int32
        value:
          type: integer
          format: int32
    DeviceCapabilitiesRequest:
      required:
      - capabilities
      type: object
      properties:
        capabilities:
          type: array
          items:
            $ref: '#/components/schemas/AbstractCapability'
    SwitchLedCapability:
      required:
      - value
      type: object
      allOf:
      - $ref: '#/components/schemas/AbstractCapability'
      - type: object
        properties:
          value:
            type: boolean
    TemperatureCapability:
      required:
      - value
      type: object
      allOf:
      - $ref: '#/components/schemas/AbstractCapability'
      - type: object
        properties:
          value:
            type: integer
            format: int32
    WorkModeCapability:
      required:
      - value
      type: object
      allOf:
      - $ref: '#/components/schemas/AbstractCapability'
      - type: object
        properties:
          value:
            type: string
            enum:
            - WHITE
            - COLOR
    DeviceSimple:
      required:
      - category
      - homeId
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        homeId:
          type: integer
          format: int32
        roomId:
          type: integer
          format: int32
        name:
          type: string
        category:
          type: string
    Code:
      type: string
      enum:
        - SWITCH_LED
        - TEMPERATURE
        - COLOR
        - BRIGHTNESS
        - WORK_MODE